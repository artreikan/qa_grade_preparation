# Переменные предназначены для хранения данных
name = 'Светлана'
print(name)

# Список (list) представляет тип данных, который хранит набор или последовательность элементов.
# Для создания списка применяются квадратные скобки [], внутри которых через запятую перечисляются элементы списка.
# Например, определим список чисел:

numbers = [1, 2, 3, 4, 5]
print(numbers)

# Для обращения к элементам списка надо использовать индексы, которые представляют номер элемента в списка.
# Индексы начинаются с нуля.
# То есть первый элемент будет иметь индекс 0, второй элемент - индекс 1 и так далее.
# Для обращения к элементам с конца можно использовать отрицательные индексы, начиная с -1.
# То есть у последнего элемента будет индекс -1, у предпоследнего - -2 и так далее.


# получение элементов с начала списка
people = ["Tom", "Sam", "Bob"]
print(people[0])   # Tom
print(people[1])   # Sam
print(people[2])   # Bob

# получение элементов с конца списка
people = ["Tom", "Sam", "Bob"]
print(people[-2])   # Sam
print(people[-1])   # Bob
print(people[-3])   # Tom

# Для перебора элементов можно использовать как цикл for, так и цикл while.
# Перебор с помощью цикла for:
people = ["Tom", "Sam", "Bob"]
for person in people:
    print(person)

cars = ["Audi", "BNW", "Mercedes"]
for car in cars:
    print(car)

# Перебор также можно сделать с помощью цикла while:
people = ["Tom", "Sam", "Bob"]
i = 0
while i < len(people):
    print(people[i])    # применяем индекс для получения элемента
    i += 1

# Проверка наличия элемента
people = ["Tom", "Bob", "Alice", "Sam"]
if "Alice" in people:
    people.remove("Alice")  # метод удаления элемента из списка.
print(people)  # ["Tom", "Bob", "Sam"]

# Кортеж представляет последовательность элементов, которая во многом похожа на список за тем исключением, что кортеж является неизменяемым типом.
# Поэтому мы не можем добавлять или удалять элементы в кортеже, изменять его.
# Для создания кортежа используются круглые скобки, в которые помещаются его значения, разделенные запятыми:
tom = ("Tom", 23)
print(tom)  # ("Tom", 23)

# Также для определения кортежа мы можем просто перечислить значения через запятую без применения скобок:
tom = "Tom", 23
print(tom)     # ("Tom", 23)

# Если вдруг кортеж состоит из одного элемента, то после единственного элемента кортежа необходимо поставить запятую:
tom = ("Tom",)

# С помощью встроенной функции len() можно получить длину кортежа:
tom = ("Tom", 37, "Google")
print(len(tom))     # 3

# Обращение к элементам в кортеже происходит также, как и в списке, по индексу.
# Индексация начинается также с нуля при получении элементов с начала списка и с -1 при получении элементов с конца списка:
tom = ("Tom", 37, "Google", "software developer")
print(tom[0])  # Tom
print(tom[1])  # 37
print(tom[-1])  # software developer

# Словарь в языке Python хранит коллекцию элементов, 
# где каждый элемент имеет уникальный ключ и ассоциированое с ним некоторое значение.

# пример словаря:
users = {1: "Tom", 2: "Bob", 3: "Bill"}

# Для обращения к элементам словаря после его названия в квадратных скобках указывается ключ элемента:
users = {
    "+11111111": "Tom",
    "+33333333": "Bob",
    "+55555555": "Alice"
}
 
# получаем элемент с ключом "+11111111"
print(users["+11111111"])      # Tom
 
# установка значения элемента с ключом "+33333333"
users["+33333333"] = "Bob Smith"
print(users["+33333333"])   # Bob Smith

# Проверка на наличие ключа в словаре с помощью if:
key = "+4444444"
if key in users:
    user = users[key]
    print(user)
else:
    print("Элемент не найден")

# Для удаления элемента по ключу применяется оператор del:
users = {
    "+11111111": "Tom",
    "+33333333": "Bob",
    "+55555555": "Alice"
}
 
del users["+55555555"]
print(users)    # { "+11111111": "Tom", "+33333333": "Bob"}

# Для перебора словаря можно воспользоваться циклом for:
users = {
    "+11111111": "Tom",
    "+33333333": "Bob",
    "+55555555": "Alice"
}
for key in users:
    print(users[key])

# Списки и кортежи можно преобразовывать в словарь с помощью встроенной функции dict()

# Пример со списком:
users_list = [
    ["+111123455", "Tom"],
    ["+384767557", "Bob"],
    ["+958758767", "Alice"]
]
users_dict = dict(users_list)
print(users_dict)      # {"+111123455": "Tom", "+384767557": "Bob", "+958758767": "Alice"}

# Пример с кортежем:
users_tuple = (
    ("+111123455", "Tom"),
    ("+384767557", "Bob"),
    ("+958758767", "Alice")
)
users_dict = dict(users_tuple)
print(users_dict)

# Множество (set) представляют еще один вид набора, который хранит только уникальные элементы. 
# Для определения множества используются фигурные скобки, в которых перечисляются элементы:
users = {"Tom", "Bob", "Alice", "Tom"}
print(users)    # {"Alice", "Bob", "Tom"}